apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'me.tatarka.retrolambda'
apply from: "$rootDir/utils.gradle"

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    signingConfigs {
        prod {
            keyAlias 'DatabindingMVVM'
            storeFile file("$rootDir/dbmvvm.jks")
            keyPassword 'dbmvvmostro'
            storePassword 'dbmvvmostro'
        }
        dev {
            keyAlias 'DatabindingMVVM'
            storeFile file("$rootDir/dbmvvm.jks")
            keyPassword 'dbmvvmostro'
            storePassword 'dbmvvmostro'
        }
    }

    defaultConfig {
        applicationId "com.ostro.databindingmvvm"
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 100
        versionName "1.0.0"
    }

    productFlavors {
        dev {
            minSdkVersion 21
            applicationId "${defaultConfig.applicationId}.${name}"
        }
        prod {
            minSdkVersion 16
            applicationId "${defaultConfig.applicationId}"
        }
    }

    buildTypes {
        release {
            productFlavors.dev.signingConfig signingConfigs.dev
            productFlavors.prod.signingConfig signingConfigs.prod

            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig null

            productFlavors.dev.signingConfig signingConfigs.dev
            productFlavors.prod.signingConfig signingConfigs.prod

            versionNameSuffix "-DEV"
            minifyEnabled false
            debuggable true
        }
    }

    // rename the output apk file when it's a release version
    applicationVariants.all { variant ->
        def flavorName = variant.productFlavors.get(0).name;
        def buildTypeName = variant.buildType.name;
        if (buildTypeName == "release") {
            variant.outputs.each { output ->
                output.outputFile = new File("$rootDir/apk".toString(),
                        "apk_release_" + flavorName + "-c" + versionCode + "_v" + versionName + ".apk");
            }
        }

//        Properties networkProperties = new Properties()
//        networkProperties.load(new FileInputStream("$rootDir/app/src/" + flavorName + "/network.properties"))
//
//        if (flavorName == "prod" || buildTypeName == "release") {
//            variant.buildConfigField 'String', 'API_URL', toJavaCodeString(networkProperties.API_URL_PROD)
//        } else {
//            variant.buildConfigField 'String', 'API_URL', toJavaCodeString(networkProperties.API_URL_RUNSCOPE)
//        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.1'
    testCompile 'junit:junit:4.12'

    final SUPPORT_LIBRARY_VERSION = '24.2.1'
    final RETROFIT_VERSION = '2.1.0'
    final OKHTTP_VERSION = '3.3.1'

    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile 'com.jakewharton.timber:timber:4.3.1'
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile 'com.trello:rxlifecycle:0.3.0'
    compile 'com.trello:rxlifecycle-components:0.3.0'

    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.6'

    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"

    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:logging-interceptor:$OKHTTP_VERSION"
}
